PEP 20 -- The Zen of Python

The Zen of Python is a collection of 19 "guiding principles" for writing computer programs that influence the design of
the Python programming language.[1] Software engineer Tim Peters wrote this set of principles and posted it on the
Python mailing list in 1999.[2] Peters's list left open a 20th principle "for Guido to fill in", referring to
Guido van Rossum, the original author of the Python language. The vacancy for a 20th principle has not been filled.
Peters's Zen of Python was included as entry number 20 in the language's official Python Enhancement Proposals, which
was released into the public domain.[3] It is also included as an Easter egg in the Python interpreter,
which can be displayed by entering .[1][3]import this

In May 2020, Barry Warsaw wrote the lyrics to music.[4][5]

https://en.wikipedia.org/wiki/Zen_of_Python

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!

Easter Egg
Note: To show (import this)

References
Originally posted to comp.lang.python/python-list@python.org under a thread called "The Way of Python"
https://groups.google.com/d/msg/comp.lang.python/B_VxeTBClM0/L8W9KlsiriUJ

Copyright
Source: https://github.com/python/peps/blob/master/pep-0020.txt